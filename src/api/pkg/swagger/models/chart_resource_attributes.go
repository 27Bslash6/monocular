package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/validate"
)

/*ChartResourceAttributes chart resource attributes

swagger:model chartResourceAttributes
*/
type ChartResourceAttributes struct {

	/* created

	Required: true
	Min Length: 1
	*/
	Created string `json:"created"`

	/* description

	Required: true
	Min Length: 1
	*/
	Description string `json:"description"`

	/* home

	Required: true
	Min Length: 1
	*/
	Home string `json:"home"`

	/* name

	Required: true
	Min Length: 1
	*/
	Name string `json:"name"`

	/* repo

	Required: true
	*/
	Repo string `json:"repo"`
}

// Validate validates this chart resource attributes
func (m *ChartResourceAttributes) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreated(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateDescription(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateHome(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateRepo(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ChartResourceAttributes) validateCreated(formats strfmt.Registry) error {

	if err := validate.RequiredString("created", "body", string(m.Created)); err != nil {
		return err
	}

	if err := validate.MinLength("created", "body", string(m.Created), 1); err != nil {
		return err
	}

	return nil
}

func (m *ChartResourceAttributes) validateDescription(formats strfmt.Registry) error {

	if err := validate.RequiredString("description", "body", string(m.Description)); err != nil {
		return err
	}

	if err := validate.MinLength("description", "body", string(m.Description), 1); err != nil {
		return err
	}

	return nil
}

func (m *ChartResourceAttributes) validateHome(formats strfmt.Registry) error {

	if err := validate.RequiredString("home", "body", string(m.Home)); err != nil {
		return err
	}

	if err := validate.MinLength("home", "body", string(m.Home), 1); err != nil {
		return err
	}

	return nil
}

func (m *ChartResourceAttributes) validateName(formats strfmt.Registry) error {

	if err := validate.RequiredString("name", "body", string(m.Name)); err != nil {
		return err
	}

	if err := validate.MinLength("name", "body", string(m.Name), 1); err != nil {
		return err
	}

	return nil
}

func (m *ChartResourceAttributes) validateRepo(formats strfmt.Registry) error {

	if err := validate.RequiredString("repo", "body", string(m.Repo)); err != nil {
		return err
	}

	return nil
}
